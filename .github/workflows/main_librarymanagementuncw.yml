name: Build and deploy Python app to Azure Web App - librarymanagementuncw

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  repository_dispatch:
    types: [trigger_backend]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          echo "venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          pip install whitenoise

      # Get the latest frontend build artifact
      - name: Download Latest Frontend Build Artifact
        run: |
          ARTIFACTS=$(curl -L -H "Authorization: token ${{ secrets.ACTION_KEY }}" \
            https://api.github.com/repos/ap45/library-management-frontend/actions/artifacts)

          LATEST_ARTIFACT=$(echo "$ARTIFACTS" | jq -r '.artifacts | max_by(.created_at)')

          DOWNLOAD_URL=$(echo "$LATEST_ARTIFACT" | jq -r '.archive_download_url')

          if [ -z "$DOWNLOAD_URL" ]; then
            echo "Failed to extract download URL for the latest frontend build artifact."
            exit 1
          fi

          curl -L -H "Authorization: token ${{ secrets.ACTION_KEY }}" -o frontend.zip "$DOWNLOAD_URL"

      - name: Unzip frontend artifact
        run: |
          unzip frontend.zip -d dist/

      - name: Collect static files
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_DEBUG: 'False'
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}

      # Create deployment package
      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r -x "venv/*"

      # Upload the deployment package
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'librarymanagementuncw'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C654E2CC2B9448D9843D462823951799 }}  # Ensure this is set correctly
